[/
  Copyright 2015 Andy Thomason
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
]

[article Boost.Genetics
  [quickbook 1.6]
  [copyright 2015 Andy Thomason]
  [authors [Thomason, Andy]]
   [license
      Distributed under the Boost Software License, Version 1.0.
      (See accompanying file LICENSE_1_0.txt or copy at
      [@http://www.boost.org/LICENSE_1_0.txt])
  ]
  [id genetics]
  [version 0.1]
]

[/ For Quickbook manual see:]

[def __quickbook [@http://www.boost.org/doc/libs/release/doc/html/quickbook/ Quickbook]]

[def __caution This is NOT an official Boost library, but remains a library under
               development, the code is fully functional and robust, but
               interfaces, library structure, and function and distribution names
               may still be changed without notice.]

[import ../../../tools/auto_index/include/auto_index_helpers.qbk]
[/ Required only for autoindex when MUST be first included file!]

[import html4_symbols.qbk]

[/ Macro definitions, conventionally prefixed by two underscores, and used in text as just __spaces]
[def __spaces '''&#x2000;&#x2000;'''] [/ two spaces - useful for an indent (as space is bizarrely a format as code item!]
[def __green_tick [role aligncenter [role green \u2714]]] [/ u2714 is a HEAVY CHECK MARK tick (2713 check mark)]
[def __red_cross [role aligncenter [role red \u2718]]] [/ u2718 is a heavy cross]
[def __red_star [role aligncenter [role red \u2736]]] [/ 6-point star]

[def __A [role red A]]
[def __G [role green G]]
[def __C [role blue C]]
[def __T [role gold T]]
[def __U [role gold U]]
[def __N [role cyan N]]

[/ examples of links that you are likely to re-use in the text - recommended - you very often will do!]
[def __DNA_sequencing [@https://en.wikipedia.org/wiki/DNA_sequencing DNA sequencing]]
[def __BWT [@https://en.wikipedia.org/wiki/Burrows%E2%80%93Wheeler_transform Burrows-Wheeler transform]]
[/ Hint - non-ASCII chars are used in wikipedia heading like the dash in  Burrows-Wheeler so type them in]
[def __FASTQ [@https://en.wikipedia.org/wiki/FASTQ_format FASTQ format]]
[def __FASTA [@https://en.wikipedia.org/wiki/FASTA_format FASTA format]]
[def __SAM [@http://samtools.github.io/hts-specs/SAMv1.pdf Sequence Alignment/Map Format Specification]]
[def __BAM [@http://samtools.github.io/hts-specs/SAMv1.pdf Section 4 The BAM Format Specification]]
[def __VCF [@https://en.wikipedia.org/wiki/Variant_Call_Format Variant Call Format]]

[/Link to a section in the text, using the section id (not the actual section title]
[def __file_formats [link genetics.file_formats]]

[/ Misc references]
[def __R [@http://www.r-project.org/ The R Project for Statistical Computing]]
[def __SSE2 [@http://en.wikipedia.org/wiki/SSE2 SSE2 instructions]]

[/links to Boost libraries - Boost.Test, Timer ...]
[/Note the use of @boost:/libs/etc... to make it version independent - always most recent version.]
[def __boost_test [@boost:/libs/test/doc/html/index.html Boost.Test]]
[def __boost_timer [@boost:/libs/timer/doc/index.html Boost.Timer]]

[/links to classes and functions in header files]
[/ see http://www.boost.org/doc/libs/release/doc/html/quickbook/syntax/phrase.html#quickbook.syntax.phrase.code_links]
[/funcref fully::qualified::function_name The link text]
[def __dna_string [classref boost::genetics::basic_dna_string basic_dna_string]]
[/def __find_inexact [funcref boost::genetics::find_inexact find_inexact]]

[/ Some composite templates, call example [super -2] ]
[template super[x]'''<superscript>'''[x]'''</superscript>''']
[template sub[x]'''<subscript>'''[x]'''</subscript>''']
[template floor[x]'''&#x230A;'''[x]'''&#x230B;''']
[template floorlr[x][lfloor][x][rfloor]]
[template ceil[x] '''&#x2308;'''[x]'''&#x2309;''']

[template header_file[file] [@../../../../[file] [file]]]

[section:overview Overview]
This library provides containers and algorithms for working with genetic sequences
which are mostly composed of the letters (or bases):

__A  __G __C __T

When working with RNA the __T is replaced with __U and some files use __N
to represent unknown values.

Searches are usually inexact. For example we may wish to search for

__G __A __T __A __C __A

But allow one error so that

__G __A __A __A __C __A or __T __A __T __A __C __A

Are allowed. This is very common because genomes vary by only a few
bases or there may be errors in the data we read from sequencing machines.
[endsect] [/section:overview Overview]

[section:file_formats  File Formats]

[table:formats Common DNA data File Formats
[[Name] [data type][link]]
[[FASTA][Chromosome data (DNA)] [ [__FASTA]]]
[[FASTQ][Read data from sequencing machines] [ [__FASTQ]]]
[[SAM/BAM][Output from aligners][[__SAM]]]
[[GTF][Gene annotation][[@http://en.wikipedia.org/wiki/GENCODE GENCODE]]]
[[EMBL][Individual genes and DNA][[@http://www.bioperl.org/wiki/EMBL_sequence_format]]]
[[VEP][Variant end predictor][[@http://www.ensembl.org/info/docs/tools/vep/vep_formats.html VEP formats]]]
[[VCF][Variant call format][[@http://www.ensembl.org/info/docs/tools/vep/vep_formats.html#vcf VEP formats]]]
] [/table:formats]

These are mostly (with the exception of BAM) ASCII files.

We aim to support all these file formats.

[endsect] [/section:file_formats  File Formats]

[section:containers Containers and Datatypes]

We want to store the genetic data in a memory efficent way that allows
the fastest access. Memory access will always be the dominant performance
factor for search algorithms and compact storage will make the most
difference.

In the dna_string class, which behaves much like std::string, we store the
bases as two bits per character. This is optimal for very large databases
such as the human genome which contains around 3.2 billion bases.

In the augmented_string class, we store the bases as two bits but allow
long runs of 'N' and other characters. This should not be used for normal
text data, however, std:string is the best choice for this.

We can index a DNA string using the two_stage_index class. This class
has an first index based on content and a second index based on position.
After an initial content look-up we can then search on position without
having to touch the reference data - important as random memory access
is very slow.

The 'fasta' class uses an augmented_string, a two_stage_index and a
vector of chromosome data to represent an entire genome.

[endsect] [/section:containers Containers and Datatypes]

[section:file_mapping File Mapping]
Because many of the data files used by this library are very large,
especially the FASTA indexes which are normally around 13GB, we use file
mapping to avoid having to load them.

The library Boost.Interprocess has a number of methods for dealing with
file mapping which also allow two processes to share access to the same file
without having to have two copies of the data.

With modern hardware, we should avoid reading files in the traditional manner
unless we are processing data from the file sequentially. Databases and
other random access files are usually mapped to process address space
with the disk cache visible directly from the process. This also gives
us the benefit of being able to have much more allocated memory than
we would usually have due to the limits of size of the swap file.

Because of this, most of the classes come with mapped_* versions which can
use an external memory image to represent their data. We construct the
data using the non-mapped version and then write the binary data to disk.
We can then map the disk image multiple times using the mapped_* classes
or store the data in a managed object in Python, for example.

[endsect] [/section:file_mapping File Mapping]


[section:examples Examples]
[include examples.qbk]
[endsect] [/section examples]

[section:rationale Rationale]
[h4 Gene Searches]
[endsect] [/section Rationale]

[section:history History]

[h5 Pre-review history]

* Documentation prototype using Quickbook, Doxygen and Boost.Autoindex drafted by Paul A. Bristow.
* [@https://github.com/andy-thomason/genetics/  Boost.Genetics library proposed by Andy Thomason]
* [@http://boost.2283326.n4.nabble.com/Genetics-library-advice-needed-td4676695.html Post asking for advice rolling out the first draft of our genetics library]

Expression of interest in a genetic algorthms library.  Date?

[endsect] [/section:history History]


[section:faq Frequently Asked Questions FAQ]
[/use of br (new paragraph) causes warnings but ignore them.]

You might want a FAQ?

# ['I'm a R user and I don't see why I should bother with Boost?]
# I have another problem...

[endsect] [/section:faq Frequently Asked Questions FAQ]

[section:credits Credits and Acknowledgements]
The documentation was produce in Quickbook format by Paul A. Bristow.
[endsect] [/section:credits Credits and Acknowledgements]

[section:navigation Navigation]

Boost.Genetics documentation is available in both HTML and PDF formats.

* [*Tutorials] are listed in the ['Table of Contents] and
include many examples that should help you get started quickly.
* [*Source code] of the many ['Examples] will often be your quickest starting point.
* [*Index] (general) includes all entries.
* [*Specific Indexes] list only functions, class signatures, macros and typedefs.

[h5 Using the Indexes]

The main index will usually help,
especially if you know a word describing what it does,
without needing to know the exact name chosen for the function.

[tip When using the index, keep in mind that clicking on an index term
only takes you to the [*section] containing the index entry.
This section may be several pages long,
so you may need to use the [*find] facility of your browser or PDF reader
to get to the index term itself.]

[tip A PDF reader usually allows a [*global] find; this can be really useful
if the term you expect to be indexed is not the one chosen by the authors.
You might find searching the PDF version and viewing the HTML version
will locate an elusive item.]

[endsect] [/section:navigation Navigation]

[section:tickets Trac Tickets]

[/ If accepted, you can link to Trac system for bug and fixes like this.]
Existing open tickets for this library alone can be viewed
[@https://svn.boost.org/trac/boost/query?status=assigned&status=new&status=reopened&component=genetics&col=id&col=summary&col=status&col=owner&col=type&col=milestone&order=priority here].

[endsect] [/section:tickets Trac Tickets]

[section:conventions Document Conventions]

This documentation aims to use of the following naming and formatting conventions.

* C++ Code is in `fixed width font` and is syntax-highlighted in color, for example `double`.
* Other code is in block [^teletype fixed-width font].
* Replaceable text that [*you] will need to supply is in [~italics].
* If a name refers to a free function, it is specified like this:
  `free_function()`; that is, it is in [~code font] and its name is followed by `()`
  to indicate that it is a free function.
* If a name refers to a class template, it is specified like this:
  `class_template<>`; that is, it is in code font and its name is followed by `<>`
  to indicate that it is a class template.
* If a name refers to a function-like macro, it is specified like this: `MACRO()`;
  that is, it is uppercase in code font and its name is followed by `()` to
  indicate that it is a function-like macro. Object-like macros appear without the
  trailing `()`.
* Names that refer to ['concepts] in the generic programming sense
(like template parameter names) are specified in CamelCase.

[endsect] [/section:conventions Document Conventions]

[section:version_id Documentation Version Info]

Last edit to Quickbook file __FILENAME__ was at __TIME__ on __DATE__.

[tip This should appear on the pdf version
(but may be redundant on a html version where the last edit date is on the first (home) page).]

[warning Home page "Last revised" is GMT, not local time.  Last edit date is local time.]
[/See also Adobe Reader pdf File Properties for creation date, and PDF producer, version and page count.]

[endsect] [/section:version_id Version Info]

[xinclude autodoc.xml] [/ Using Doxygen reference documentation.]
[/ The position of this in the Quickbook determines the location of the Doxygen references section.]
[/ Index(es) should be invoked in the main module, not within a section.]

'''
  <index/>
'''






